I"Ç&<p>In the previous part of this series, we introduced the Nesher Bari project, which aims to build an ML solution to accelerate vulture conservation (see <a href="https://wildlife.ai/projects/nesher-bari/">more details in Wildlife.aiâ€™s website</a>).
In this post, we dive into more technical details and explore one of the main datasets in the project: the Ornitela dataset.</p>

<h2 id="import-libraries">import libraries</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">from</span> <span class="nn">jupyterthemes</span> <span class="kn">import</span> <span class="n">jtplot</span>

<span class="n">COLORS</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">color_palette</span><span class="p">(</span><span class="s">"deep"</span><span class="p">,</span> <span class="mi">12</span><span class="p">).</span><span class="n">as_hex</span><span class="p">()</span>
<span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_columns'</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>

<span class="n">darkmode_on</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">if</span> <span class="n">darkmode_on</span><span class="p">:</span>
    <span class="n">jtplot</span><span class="p">.</span><span class="n">style</span><span class="p">(</span><span class="n">theme</span><span class="o">=</span><span class="s">'grade3'</span><span class="p">,</span> <span class="n">ticks</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">grid</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="load--extract-data-quick-overview">Load &amp; Extract Data: Quick Overview</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">df_ornitela_raw</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'./../data/Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel_newer.csv'</span><span class="p">)</span>
<span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>event-id</th>
      <th>visible</th>
      <th>timestamp</th>
      <th>location-long</th>
      <th>location-lat</th>
      <th>acceleration-raw-x</th>
      <th>acceleration-raw-y</th>
      <th>acceleration-raw-z</th>
      <th>bar:barometric-height</th>
      <th>battery-charge-percent</th>
      <th>battery-charging-current</th>
      <th>external-temperature</th>
      <th>gps:hdop</th>
      <th>gps:satellite-count</th>
      <th>gps-time-to-fix</th>
      <th>ground-speed</th>
      <th>heading</th>
      <th>height-above-msl</th>
      <th>import-marked-outlier</th>
      <th>gls:light-level</th>
      <th>mag:magnetic-field-raw-x</th>
      <th>mag:magnetic-field-raw-y</th>
      <th>mag:magnetic-field-raw-z</th>
      <th>orn:transmission-protocol</th>
      <th>tag-voltage</th>
      <th>sensor-type</th>
      <th>individual-taxon-canonical-name</th>
      <th>tag-local-identifier</th>
      <th>individual-local-identifier</th>
      <th>study-name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16422103004</td>
      <td>True</td>
      <td>2020-08-28 04:27:58.000</td>
      <td>35.013573</td>
      <td>32.753487</td>
      <td>-65.0</td>
      <td>10.0</td>
      <td>-1058.0</td>
      <td>0.0</td>
      <td>92</td>
      <td>0.0</td>
      <td>28.0</td>
      <td>1.7</td>
      <td>5</td>
      <td>159.69</td>
      <td>0.277778</td>
      <td>87.0</td>
      <td>368.0</td>
      <td>False</td>
      <td>1046.0</td>
      <td>-0.621</td>
      <td>0.036</td>
      <td>0.014</td>
      <td>GPRS</td>
      <td>4100.0</td>
      <td>gps</td>
      <td>Gyps fulvus</td>
      <td>202382</td>
      <td>T59w</td>
      <td>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</td>
    </tr>
    <tr>
      <th>1</th>
      <td>16422103005</td>
      <td>True</td>
      <td>2020-08-28 04:30:33.000</td>
      <td>35.013290</td>
      <td>32.753368</td>
      <td>-33.0</td>
      <td>-638.0</td>
      <td>815.0</td>
      <td>0.0</td>
      <td>92</td>
      <td>15.0</td>
      <td>28.0</td>
      <td>1.7</td>
      <td>5</td>
      <td>16.04</td>
      <td>0.277778</td>
      <td>47.0</td>
      <td>368.0</td>
      <td>False</td>
      <td>1386.0</td>
      <td>-0.603</td>
      <td>-0.330</td>
      <td>-0.495</td>
      <td>GPRS</td>
      <td>4103.0</td>
      <td>gps</td>
      <td>Gyps fulvus</td>
      <td>202382</td>
      <td>T59w</td>
      <td>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</td>
    </tr>
    <tr>
      <th>2</th>
      <td>16422103006</td>
      <td>True</td>
      <td>2020-08-28 04:35:28.000</td>
      <td>35.013302</td>
      <td>32.753448</td>
      <td>-17.0</td>
      <td>-635.0</td>
      <td>824.0</td>
      <td>0.0</td>
      <td>93</td>
      <td>15.0</td>
      <td>29.0</td>
      <td>1.8</td>
      <td>5</td>
      <td>11.44</td>
      <td>0.000000</td>
      <td>113.0</td>
      <td>368.0</td>
      <td>False</td>
      <td>2047.0</td>
      <td>-0.575</td>
      <td>-0.367</td>
      <td>-0.493</td>
      <td>GPRS</td>
      <td>4108.0</td>
      <td>gps</td>
      <td>Gyps fulvus</td>
      <td>202382</td>
      <td>T59w</td>
      <td>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</td>
    </tr>
    <tr>
      <th>3</th>
      <td>16422103007</td>
      <td>True</td>
      <td>2020-08-28 04:40:28.000</td>
      <td>35.013493</td>
      <td>32.753475</td>
      <td>108.0</td>
      <td>4.0</td>
      <td>1044.0</td>
      <td>0.0</td>
      <td>93</td>
      <td>0.0</td>
      <td>31.0</td>
      <td>1.8</td>
      <td>5</td>
      <td>11.53</td>
      <td>0.000000</td>
      <td>52.0</td>
      <td>368.0</td>
      <td>False</td>
      <td>1928.0</td>
      <td>0.040</td>
      <td>-0.045</td>
      <td>-0.659</td>
      <td>GPRS</td>
      <td>4108.0</td>
      <td>gps</td>
      <td>Gyps fulvus</td>
      <td>202382</td>
      <td>T59w</td>
      <td>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</td>
    </tr>
    <tr>
      <th>4</th>
      <td>16422103008</td>
      <td>True</td>
      <td>2020-08-28 04:45:37.000</td>
      <td>35.013519</td>
      <td>32.753521</td>
      <td>60.0</td>
      <td>-432.0</td>
      <td>-1147.0</td>
      <td>0.0</td>
      <td>93</td>
      <td>0.0</td>
      <td>31.0</td>
      <td>2.0</td>
      <td>4</td>
      <td>20.52</td>
      <td>0.277778</td>
      <td>290.0</td>
      <td>368.0</td>
      <td>False</td>
      <td>496.0</td>
      <td>-0.314</td>
      <td>0.111</td>
      <td>-0.113</td>
      <td>GPRS</td>
      <td>4106.0</td>
      <td>gps</td>
      <td>Gyps fulvus</td>
      <td>202382</td>
      <td>T59w</td>
      <td>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</td>
    </tr>
  </tbody>
</table>

<p>Letâ€™s explore some basic information about the Ornitela dataset, mainly shape and schema:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">" n_rows: </span><span class="si">{</span><span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s"> </span><span class="se">\n</span><span class="s"> n_columns: </span><span class="si">{</span><span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre> n_rows: 2374007 
 n_columns: 30
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"dataset schema:"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">60</span><span class="p">)</span>
<span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="rouge-code"><pre>dataset schema:
============================================================
&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 2374007 entries, 0 to 2374006
Data columns (total 30 columns):
 #   Column                           Dtype  
---  ------                           -----  
 0   event-id                         int64  
 1   visible                          bool   
 2   timestamp                        object 
 3   location-long                    float64
 4   location-lat                     float64
 5   acceleration-raw-x               float64
 6   acceleration-raw-y               float64
 7   acceleration-raw-z               float64
 8   bar:barometric-height            float64
 9   battery-charge-percent           int64  
 10  battery-charging-current         float64
 11  external-temperature             float64
 12  gps:hdop                         float64
 13  gps:satellite-count              int64  
 14  gps-time-to-fix                  float64
 15  ground-speed                     float64
 16  heading                          float64
 17  height-above-msl                 float64
 18  import-marked-outlier            bool   
 19  gls:light-level                  float64
 20  mag:magnetic-field-raw-x         float64
 21  mag:magnetic-field-raw-y         float64
 22  mag:magnetic-field-raw-z         float64
 23  orn:transmission-protocol        object 
 24  tag-voltage                      float64
 25  sensor-type                      object 
 26  individual-taxon-canonical-name  object 
 27  tag-local-identifier             int64  
 28  individual-local-identifier      object 
 29  study-name                       object 
dtypes: bool(2), float64(18), int64(4), object(6)
memory usage: 511.7+ MB
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Letâ€™s explore if there are any duplicated event entries or any entries with null values:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"duplicated rows in the Ornitela dataset:"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">60</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">duplicated</span><span class="p">().</span><span class="nb">sum</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"duplicated rows in the Ornitela dataset:"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">60</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">df_ornitela_raw</span><span class="p">.</span><span class="n">isna</span><span class="p">().</span><span class="nb">sum</span><span class="p">())</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="rouge-code"><pre>duplicated rows in the Ornitela dataset:
============================================================
0
duplicated rows in the Ornitela dataset:
============================================================
event-id                           0
visible                            0
timestamp                          0
location-long                      1
location-lat                       1
acceleration-raw-x                 0
acceleration-raw-y                 0
acceleration-raw-z                 0
bar:barometric-height              0
battery-charge-percent             0
battery-charging-current           0
external-temperature               0
gps:hdop                           0
gps:satellite-count                0
gps-time-to-fix                    0
ground-speed                       0
heading                            0
height-above-msl                   0
import-marked-outlier              0
gls:light-level                    0
mag:magnetic-field-raw-x           0
mag:magnetic-field-raw-y           0
mag:magnetic-field-raw-z           0
orn:transmission-protocol          0
tag-voltage                        0
sensor-type                        0
individual-taxon-canonical-name    0
tag-local-identifier               0
individual-local-identifier        0
study-name                         0
dtype: int64
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We can see that the Ornitela dataset contains no duplicates but 1 entry with null latitude and longitude.</p>

<p>Letâ€™s make sure we drop any null values and even duplicates (even if there are non) and then extract some basic stats from each of the attributes:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">df_ornitela</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df_ornitela_raw</span>
    <span class="p">.</span><span class="n">copy</span><span class="p">()</span>
    <span class="p">.</span><span class="n">drop_duplicates</span><span class="p">()</span>
    <span class="p">.</span><span class="n">dropna</span><span class="p">()</span>
<span class="p">)</span>

<span class="n">df_ornitela</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="s">'{0:.5f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>event-id</th>
      <th>location-long</th>
      <th>location-lat</th>
      <th>acceleration-raw-x</th>
      <th>acceleration-raw-y</th>
      <th>acceleration-raw-z</th>
      <th>bar:barometric-height</th>
      <th>battery-charge-percent</th>
      <th>battery-charging-current</th>
      <th>external-temperature</th>
      <th>gps:hdop</th>
      <th>gps:satellite-count</th>
      <th>gps-time-to-fix</th>
      <th>ground-speed</th>
      <th>heading</th>
      <th>height-above-msl</th>
      <th>gls:light-level</th>
      <th>mag:magnetic-field-raw-x</th>
      <th>mag:magnetic-field-raw-y</th>
      <th>mag:magnetic-field-raw-z</th>
      <th>tag-voltage</th>
      <th>tag-local-identifier</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>20552869208.05338</td>
      <td>35.41146</td>
      <td>29.08398</td>
      <td>25.38844</td>
      <td>519.36946</td>
      <td>800.00706</td>
      <td>0.00000</td>
      <td>92.90503</td>
      <td>7.60352</td>
      <td>34.75356</td>
      <td>1.51000</td>
      <td>7.60744</td>
      <td>29.60435</td>
      <td>4.39986</td>
      <td>178.27466</td>
      <td>705.50741</td>
      <td>688.54746</td>
      <td>0.12841</td>
      <td>-0.10202</td>
      <td>-0.24087</td>
      <td>4121.36826</td>
      <td>206449.77052</td>
    </tr>
    <tr>
      <th>std</th>
      <td>2181978669.49922</td>
      <td>2.80387</td>
      <td>4.93453</td>
      <td>101.53411</td>
      <td>301.16978</td>
      <td>259.57626</td>
      <td>0.00000</td>
      <td>13.07223</td>
      <td>12.04568</td>
      <td>4.85817</td>
      <td>1.06649</td>
      <td>2.30207</td>
      <td>25.71204</td>
      <td>6.77396</td>
      <td>105.65555</td>
      <td>529.72801</td>
      <td>841.40669</td>
      <td>1.18763</td>
      <td>0.78688</td>
      <td>0.86235</td>
      <td>84.77994</td>
      <td>5381.99189</td>
    </tr>
    <tr>
      <th>min</th>
      <td>16105780011.00000</td>
      <td>0.00000</td>
      <td>2.00003</td>
      <td>-1606.00000</td>
      <td>-1329.00000</td>
      <td>-1315.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>3.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>0.00000</td>
      <td>-1998.00000</td>
      <td>0.00000</td>
      <td>-6.71800</td>
      <td>-13.78400</td>
      <td>-6.31800</td>
      <td>0.00000</td>
      <td>202359.00000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>18884479400.25000</td>
      <td>34.82033</td>
      <td>30.75541</td>
      <td>-17.00000</td>
      <td>234.00000</td>
      <td>604.00000</td>
      <td>0.00000</td>
      <td>91.00000</td>
      <td>0.00000</td>
      <td>33.00000</td>
      <td>1.00000</td>
      <td>6.00000</td>
      <td>12.76000</td>
      <td>0.00000</td>
      <td>85.00000</td>
      <td>431.00000</td>
      <td>17.00000</td>
      <td>-0.06700</td>
      <td>-0.37700</td>
      <td>-0.56200</td>
      <td>4095.00000</td>
      <td>202377.00000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>20991679678.50000</td>
      <td>35.00437</td>
      <td>30.83160</td>
      <td>27.00000</td>
      <td>568.00000</td>
      <td>817.00000</td>
      <td>0.00000</td>
      <td>100.00000</td>
      <td>0.00000</td>
      <td>35.00000</td>
      <td>1.30000</td>
      <td>7.00000</td>
      <td>16.16000</td>
      <td>0.27778</td>
      <td>179.00000</td>
      <td>515.00000</td>
      <td>131.00000</td>
      <td>0.25500</td>
      <td>-0.00500</td>
      <td>-0.17100</td>
      <td>4155.00000</td>
      <td>202398.00000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>22502683086.75000</td>
      <td>35.22010</td>
      <td>30.95092</td>
      <td>73.00000</td>
      <td>799.00000</td>
      <td>992.00000</td>
      <td>0.00000</td>
      <td>100.00000</td>
      <td>15.00000</td>
      <td>38.00000</td>
      <td>1.70000</td>
      <td>9.00000</td>
      <td>35.86000</td>
      <td>9.44444</td>
      <td>270.00000</td>
      <td>884.00000</td>
      <td>1676.00000</td>
      <td>0.55200</td>
      <td>0.34500</td>
      <td>0.12800</td>
      <td>4178.00000</td>
      <td>213563.00000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>23854497939.00000</td>
      <td>45.30416</td>
      <td>40.02653</td>
      <td>1798.00000</td>
      <td>1810.00000</td>
      <td>2040.00000</td>
      <td>0.00000</td>
      <td>100.00000</td>
      <td>57.00000</td>
      <td>68.00000</td>
      <td>15.90000</td>
      <td>22.00000</td>
      <td>272.37000</td>
      <td>783.33333</td>
      <td>360.00000</td>
      <td>9992.00000</td>
      <td>2047.00000</td>
      <td>28.17200</td>
      <td>4.78000</td>
      <td>14.32900</td>
      <td>4203.00000</td>
      <td>213596.00000</td>
    </tr>
  </tbody>
</table>

<p>Also, letâ€™s take a quick look at the frequency of values for some key categorical attributes:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="n">cols_categorical</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'orn:transmission-protocol'</span><span class="p">,</span> 
    <span class="s">'individual-taxon-canonical-name'</span><span class="p">,</span> 
    <span class="s">'individual-local-identifier'</span><span class="p">,</span> 
    <span class="s">'study-name'</span>
<span class="p">]</span>

<span class="c1"># print frequency tables for each categorical feature
</span><span class="k">for</span> <span class="n">column</span> <span class="ow">in</span> <span class="n">cols_categorical</span><span class="p">:</span>
    <span class="n">display</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">crosstab</span><span class="p">(</span>
        <span class="n">index</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="n">column</span><span class="p">],</span> 
        <span class="n">columns</span><span class="o">=</span><span class="s">'% observations'</span><span class="p">,</span>
        <span class="n">normalize</span><span class="o">=</span><span class="s">'columns'</span>
    <span class="p">)</span><span class="o">*</span><span class="mi">100</span>
           <span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>col_0</th>
      <th>% observations</th>
    </tr>
    <tr>
      <th>orn:transmission-protocol</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>GPRS</th>
      <td>99.58252</td>
    </tr>
    <tr>
      <th>SMS</th>
      <td>0.41748</td>
    </tr>
  </tbody>
</table>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>col_0</th>
      <th>% observations</th>
    </tr>
    <tr>
      <th>individual-taxon-canonical-name</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Gyps</th>
      <td>1.144563</td>
    </tr>
    <tr>
      <th>Gyps fulvus</th>
      <td>98.855437</td>
    </tr>
  </tbody>
</table>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>col_0</th>
      <th>% observations</th>
    </tr>
    <tr>
      <th>individual-local-identifier</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A00w</th>
      <td>1.603534</td>
    </tr>
    <tr>
      <th>A01w</th>
      <td>0.366259</td>
    </tr>
    <tr>
      <th>A02w</th>
      <td>0.079781</td>
    </tr>
    <tr>
      <th>A03w</th>
      <td>1.865749</td>
    </tr>
    <tr>
      <th>A04w</th>
      <td>0.320934</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
    </tr>
    <tr>
      <th>T91b</th>
      <td>0.832938</td>
    </tr>
    <tr>
      <th>T99b</th>
      <td>1.806609</td>
    </tr>
    <tr>
      <th>Y26</th>
      <td>0.006108</td>
    </tr>
    <tr>
      <th>Y26b</th>
      <td>1.052061</td>
    </tr>
    <tr>
      <th>Y27b</th>
      <td>1.870551</td>
    </tr>
  </tbody>
</table>
<p>110 rows Ã— 1 columns</p>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>col_0</th>
      <th>% observations</th>
    </tr>
    <tr>
      <th>study-name</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ornitela_Vultures_Gyps_fulvus_TAU_UCLA_Israel</th>
      <td>100.0</td>
    </tr>
  </tbody>
</table>

<p>From this we notice a few remarks:</p>

<ul>
  <li>
    <p>Most recorded events come from GPS sensors instead of SMS.</p>
  </li>
  <li>
    <p>Most vultures are Griffon vultures (~99.9%), and the rest are only tagged as â€˜Gypsâ€™ (vultures): because of the small fraction of the latter, we will safely assume that â€˜Gypsâ€™ also refer to Griffon vultures.</p>
  </li>
  <li>
    <p>All the data entries correspond to the â€˜Ornitela Vultures Gyps fulvusâ€™ project (as expected), in collaboration between UCLA and TAU: this means that we donâ€™t have to filter the dataframe for that study.</p>
  </li>
</ul>

<p>Itâ€™s more difficult to observe the frequency of records for each identifier (corresponding to each unique vulture) in a tabular form. To appreciate that, letâ€™s plot the percentage of observations for each vulture (based on tag-local identifier):</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="n">vultures_rate</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">crosstab</span><span class="p">(</span>
    <span class="n">index</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'individual-local-identifier'</span><span class="p">],</span> 
    <span class="n">columns</span><span class="o">=</span><span class="s">'% observations'</span><span class="p">,</span> 
    <span class="n">normalize</span><span class="o">=</span><span class="s">'columns'</span><span class="p">)</span><span class="o">*</span><span class="mi">100</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span> <span class="o">=</span> <span class="mi">70</span><span class="p">)</span>                           <span class="c1"># rotates X-Axis Ticks by 70-degrees
</span><span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>
<span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span><span class="o">=</span><span class="mf">1.5</span><span class="p">)</span>
<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">vultures_rate</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">vultures_rate</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> 
    <span class="n">y</span><span class="o">=</span><span class="n">vultures_rate</span><span class="p">[</span><span class="s">'% observations'</span><span class="p">]</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_15_0.png?msec=1698559689962" alt="png" /></p>

<p>In the figure above, we can see that the frequency of observations (sampling size) across different vultures is pretty even. Although there are differences of roughly ~1% across difference vultures, the sampling is not dominated by one or a group of vultures.</p>

<h2 id="data-distribution">Data Distribution</h2>

<p>In this section, we look more in detail at the distribution of different attributes. Studying these attributes might help us understand if there are any systematic trends or biases in the data. It also helps us better understand the attributes from the dataset, thus facilitating feature selection too.</p>

<p>First, we define a reusable function to plot a distribution for each attribute:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="c1"># define an auxiliary function to draw several plots in a tight layout
</span><span class="k">def</span> <span class="nf">plot_distributon</span><span class="p">(</span>
    <span class="n">cols</span><span class="p">,</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'count'</span><span class="p">,</span> 
    <span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
    <span class="n">log_transformation</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<span class="p">):</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span>
    <span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">feature</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">cols</span><span class="p">):</span>
        <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">cols</span><span class="p">),</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">log_transformation</span><span class="p">:</span>
            <span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
                <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="n">cols</span><span class="p">],</span> 
                <span class="n">x</span><span class="o">=</span><span class="n">feature</span><span class="p">,</span> 
                <span class="n">stat</span><span class="o">=</span><span class="n">stat</span><span class="p">,</span> 
                <span class="n">bins</span><span class="o">=</span><span class="n">bins</span><span class="p">,</span>
                <span class="n">log_scale</span><span class="o">=</span><span class="p">(</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">)</span>
            <span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
                <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="n">cols</span><span class="p">],</span> 
                <span class="n">x</span><span class="o">=</span><span class="n">feature</span><span class="p">,</span> 
                <span class="n">stat</span><span class="o">=</span><span class="n">stat</span><span class="p">,</span> 
                <span class="n">bins</span><span class="o">=</span><span class="n">bins</span><span class="p">,</span>
            <span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="location">Location</h3>

<p>We explore the probability distribution of <em>latitude</em> and <em>longitude</em>. This is important because the INPA only operates in Israel, therefore we wouldnâ€™t like the dataset to contain many griffon vultures that flew away from the area.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="n">loc_cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'location-long'</span><span class="p">,</span> <span class="s">'location-lat'</span><span class="p">]</span>
<span class="n">df_ornitela</span><span class="p">[</span><span class="n">loc_cols</span><span class="p">].</span><span class="n">describe</span><span class="p">().</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="s">'{0:.5f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">))</span>

<span class="n">ISRAEL_LAT_RANGE</span> <span class="o">=</span> <span class="p">(</span><span class="mf">29.55805</span><span class="p">,</span> <span class="mf">33.20733</span><span class="p">)</span>
<span class="n">ISRAEL_LONG_RANGE</span> <span class="o">=</span> <span class="p">(</span><span class="mf">34.57149</span><span class="p">,</span> <span class="mf">35.57212</span><span class="p">)</span>

<span class="c1"># plot lat and long  distribution
</span><span class="n">fig</span><span class="p">,</span> <span class="n">axs</span>  <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">col</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">loc_cols</span><span class="p">):</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
        <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span>
        <span class="n">x</span><span class="o">=</span><span class="n">col</span><span class="p">,</span> 
        <span class="n">bins</span><span class="o">=</span><span class="mi">25</span><span class="p">,</span>
        <span class="n">stat</span><span class="o">=</span><span class="s">'probability'</span><span class="p">,</span>
        <span class="n">ax</span><span class="o">=</span><span class="n">axs</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
    <span class="p">)</span>
    <span class="n">axs</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">axvline</span><span class="p">(</span><span class="n">ISRAEL_LONG_RANGE</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="n">COLORS</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">axs</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">axvline</span><span class="p">(</span><span class="n">ISRAEL_LAT_RANGE</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">color</span><span class="o">=</span><span class="n">COLORS</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_21_0.png?msec=1698559689963" alt="png" /></p>

<p>Although some griffon vultures flew out of Israel, we can see that the vast majority of records occurred in Israel.</p>

<p>In the future, we could have a more fine-grained analysis to potentially improve the performance of an ML model. This would mainly involve getting rid of events that didnâ€™t occur in the Negev desert in Israel, where INPA focuses their conversation efforts.</p>

<h3 id="height">Height</h3>

<p>Height might be a potential telling feature as outliers might correspond to a death related event, although change in height for a particular vulture would be more telling (this might be encoded in acceleration). Letâ€™s plot the probability distribution of height:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'height-above-msl'</span><span class="p">],</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'probability'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">80</span>
<span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span>
    <span class="n">df_ornitela</span><span class="p">[</span><span class="s">'height-above-msl'</span><span class="p">].</span><span class="n">median</span><span class="p">(),</span> 
    <span class="n">color</span><span class="o">=</span><span class="n">COLORS</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s">"median = </span><span class="si">{</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'height-above-msl'</span><span class="p">].</span><span class="n">median</span><span class="p">()</span><span class="si">}</span><span class="s"> m"</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">prop</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">20</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">(</span><span class="o">-</span><span class="mi">500</span><span class="p">,</span><span class="mi">3000</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_24_0.png?msec=1698559689991" alt="png" /></p>

<p>We get a tail-end distribution with a median altitude of roughly 515m. This reflects the known fact that griffon vultures tend to stick around higher altitudes.
We will also print the percentile distribution for reference:</p>

<h3 id="ground-speed">Ground Speed</h3>

<p>Ground speeds will tend to be very specific decimal numbers. Therefore, the challenge with looking at its distritbution is that itâ€™ll be very sparse. To make up for this sparness, we can bin the data and plot the probability distribution:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span>
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'ground-speed'</span><span class="p">],</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'probability'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">75</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">200</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_28_0.png?msec=1698559689964" alt="png" /></p>

<p>We see that itâ€™s very much a tail-end distribution with the tail just around 25m/s. Therefore, most likely the speed of a vulture will be below 20 m/s. However, thereâ€™s some interesting behaviour at play. We binned the data in 75 bins but we can only see 3 in the plot above. I did bound the x-axis between speeds of 0 to 200, but still this doesnâ€™t really explain all the missing bins. Letâ€™e see if a log-plot of the count distribution without x-axis boundaries can give us any insights:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'ground-speed'</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">40</span><span class="p">],</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'ground-speed'</span><span class="p">],</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'count'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">75</span><span class="p">,</span>
    <span class="n">log_scale</span><span class="o">=</span><span class="p">(</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">),</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_30_0.png?msec=1698559689964" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">df_ornitela</span><span class="p">[[</span><span class="s">'ground-speed'</span><span class="p">]].</span><span class="n">describe</span><span class="p">().</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="s">'{0:.5f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>ground-speed</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>2374006.00000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>4.39986</td>
    </tr>
    <tr>
      <th>std</th>
      <td>6.77396</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.00000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.00000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.27778</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>9.44444</td>
    </tr>
    <tr>
      <th>max</th>
      <td>783.33333</td>
    </tr>
  </tbody>
</table>

<p>Now we can see a few outliers with ground-speed values of slightly more than 400 [m/s] and slightly less than 800 [m/s]. This seems excesively large ground speeds for Griffon vultures, and it still so it must a malfunctioning of the tracking device.</p>

<p>The summary statistics also doesnâ€™t seem to indicate why we see these behaviour with missing bins. Letâ€™s try to filter the dataset for speed values less than 80 m/s and replot the probability distribution of speed:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="n">df_ornitela_filtered</span> <span class="o">=</span> <span class="n">df_ornitela</span><span class="p">[</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'ground-speed'</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">80</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span>
    <span class="sa">f</span><span class="s">"Number of records where vultures are moving at speeds greater than 80m/s:"</span><span class="p">,</span>
    <span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df_ornitela_filtered</span><span class="p">)</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df_ornitela</span><span class="p">))</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">e</span><span class="si">}</span><span class="s">"</span>
<span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"="</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela_filtered</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela_filtered</span><span class="p">[</span><span class="s">'ground-speed'</span><span class="p">],</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'probability'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">25</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>Number of records where vultures are moving at speeds greater than 80m/s: 1.68e-06
====================================================================================================
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_33_1.png?msec=1698559689964" alt="png" /></p>

<p>This distribution is a much more telling picture of speed. It tells us that vultures are most likely to be static or moving at speeds below 2 m/s, which probably means theyâ€™re moving on the ground. Moving forward, we probably want to implement this filter in our dataset unless those outliers really represent dying vultures according to experts. In any case, these only represent 1.5 million of a fraction of the Ornitela sample.</p>

<h3 id="acceleration">Acceleration</h3>

<p>Now we take a look at a very interesting attribute: acceleration which is measured in the 3 dimensional x-, y- and z-xis. First, letâ€™s have an overall look at the desntiy distribution for acceleration in each direction:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="n">cols_acceleration</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">'acceleration-raw-x'</span><span class="p">,</span> 
    <span class="s">'acceleration-raw-y'</span><span class="p">,</span>
    <span class="s">'acceleration-raw-z'</span>
<span class="p">]</span>

<span class="n">plot_distributon</span><span class="p">(</span><span class="n">cols_acceleration</span><span class="p">,</span> <span class="n">stat</span><span class="o">=</span><span class="s">'density'</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">120</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_36_0.png?msec=1698559689964" alt="png" /></p>

<p>These a very interesting and diverse distributions! Going through each one (left to right above):</p>

<ul>
  <li>
    <p><strong>x-axis:</strong> It appears that the acceleration in this axis is mainly Gaussianly distributed around 0. Compared to the other directions, itâ€™s surprising how symmatricaly distributed the acceleration is.</p>
  </li>
  <li>
    <p><strong>y-axis:</strong> This deviates more from a Gaussian shape, though one could argue it resembles a multi-modal Gaussian distribution. The surprising remark of this distribution is that the acceleration values are overall positive as opposed to the acceleration in the x-axis.</p>
  </li>
  <li>
    <p><strong>z-axis:</strong> Finally, the acceleration in the z-axis has a Gaussian-like shape without a defined peak. Again, we see that there are no negative acceleration values in this direction (except for a tiny bump around <code class="language-plaintext highlighter-rouge">acceleration-raw-z= -500</code> ).</p>
  </li>
</ul>

<p>Moving to interpreting these results, first one should note that griffon vulture are gliders, meaning that they minimise flapping and aim to optimise air currents. 
This might explain why the x-axis acceleration is distributed around 0. That is, if the wind is moves at constant speeds (not direction) and the amount of flapping is minimal, the values around 0 will correspond to fluctuations in the wind speed that are not significant. This gliding might also explain why most acceleration values in the y- and z- directions are negative. Mainly, it is unlikely that the wind will decelerate vultures sideways in a significant manner and as glidders, they make good use of convective air currents to move upwards.</p>

<p>To see if we can unpack more insights, letâ€™s plot the three density distributions in a log-scale:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="c1"># plot with log transformation on the y-axis
</span><span class="n">plot_distributon</span><span class="p">(</span>
    <span class="n">cols_acceleration</span><span class="p">,</span>
    <span class="n">stat</span><span class="o">=</span><span class="s">'density'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">120</span><span class="p">,</span>
    <span class="n">log_transformation</span><span class="o">=</span><span class="bp">True</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_38_0.png?msec=1698559689964" alt="png" /></p>

<p>Apart from really highlighting the bump at 0 for the z-axis accleration, I donâ€™t think this log-scale distributions are very telling. We will also print the summary statistics for reference:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">df_ornitela</span><span class="p">[</span><span class="n">cols_acceleration</span><span class="p">].</span><span class="n">describe</span><span class="p">().</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="s">'{0:.5f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>acceleration-raw-x</th>
      <th>acceleration-raw-y</th>
      <th>acceleration-raw-z</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
      <td>2374006.00000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>25.38844</td>
      <td>519.36946</td>
      <td>800.00706</td>
    </tr>
    <tr>
      <th>std</th>
      <td>101.53411</td>
      <td>301.16978</td>
      <td>259.57626</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-1606.00000</td>
      <td>-1329.00000</td>
      <td>-1315.00000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-17.00000</td>
      <td>234.00000</td>
      <td>604.00000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>27.00000</td>
      <td>568.00000</td>
      <td>817.00000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>73.00000</td>
      <td>799.00000</td>
      <td>992.00000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>1798.00000</td>
      <td>1810.00000</td>
      <td>2040.00000</td>
    </tr>
  </tbody>
</table>

<h3 id="pressure">Pressure</h3>

<p>Letâ€™s have a look at the distribution of pressure as measured by barometric height (<a href="https://en.wikipedia.org/wiki/Barometric_formula">see more details here</a>)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'bar:barometric-height'</span><span class="p">],</span> 
    <span class="n">bins</span><span class="o">=</span><span class="mi">80</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_42_0.png?msec=1698559689991" alt="png" /></p>

<p>We see that the pressure is not very informative because itâ€™s always 0 so we will ignore this attribute from the analysis.</p>

<h3 id="satellite-count">Satellite Count</h3>

<p>This counts how many satellites is used to produced each record. Plotting the count distribution:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'gps:satellite-count'</span><span class="p">],</span> 
    <span class="n">bins</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span>
    <span class="n">df_ornitela</span><span class="p">[</span><span class="s">'gps:satellite-count'</span><span class="p">].</span><span class="n">median</span><span class="p">(),</span> 
    <span class="n">color</span><span class="o">=</span><span class="n">COLORS</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> 
    <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s">"median = </span><span class="si">{</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'gps</span><span class="si">:</span><span class="n">satellite</span><span class="o">-</span><span class="n">count</span><span class="s">'].median()</span><span class="si">}</span><span class="s">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">prop</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">20</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_46_0.png?msec=1698559689991" alt="png" /></p>

<p>We can see that most frequently around 7 satellites are used to produce a data entry. However, this attribute might not be critical for the first version of an ML algorithm.</p>

<h3 id="temperature">Temperature</h3>

<p>Now letâ€™s look at another very interesting attritbute: temperature. Assuming this corresponds to the temperature of the vulture, this can be a very good proxy for a death event. Especially if we look at the history of low temperature events associated with death, we might be able to distinguish between different types of death: lead poisoning, collision or hunting for example. Plotting the distribution of temperature:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'external-temperature'</span><span class="p">],</span> 
    <span class="n">stat</span><span class="o">=</span><span class="s">'percent'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span>
    <span class="n">df_ornitela</span><span class="p">[</span><span class="s">'external-temperature'</span><span class="p">].</span><span class="n">median</span><span class="p">(),</span> 
    <span class="n">color</span><span class="o">=</span><span class="n">COLORS</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> 
    <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="s">"median = </span><span class="si">{</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'external-temperature'</span><span class="p">].</span><span class="n">median</span><span class="p">()</span><span class="si">}</span><span class="s"> ËšC"</span>
<span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">prop</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">12</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_50_0.png?msec=1698559689991" alt="png" /></p>

<p>Interestingly, there are quite a few low temperature values and a bump around 0 (around 1%). Given that death is a rare event, the latter is an outlier that may be hidden by the abundance of values around 35Ë™C. Letâ€™s see if the logged-scale count distribution can resolve that:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c1"># Logarithmic transformation on the y-axis
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">,</span> 
    <span class="n">x</span><span class="o">=</span><span class="n">df_ornitela</span><span class="p">[</span><span class="s">'external-temperature'</span><span class="p">],</span>
    <span class="n">stat</span><span class="o">=</span><span class="s">'percent'</span><span class="p">,</span>
    <span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> 
    <span class="n">log_scale</span><span class="o">=</span><span class="p">(</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">),</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_52_1.png?msec=1698559689992" alt="png" /></p>

<p>When looking at at the plot above, now we really see the highlighted bump around 0 as a very interesting outlier, corresponding to more than 1,000 records of dead vultures.</p>

<h2 id="correlation-overview">Correlation Overview</h2>

<h3 id="scatter-matrix-plot">Scatter Matrix Plot</h3>

<p>Finally, a scatter matrix plot allows us to see if there are any correlations between numerical features, which will feed into feature selection. If thereâ€™s a strong correlation (or various) between two attributes, this will tell us that one of the features is redundant to feed into an ML model.</p>

<p>Since plotting a scatter matrix is very computationally demanding, Iâ€™ll subsample the data set:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="c1"># extract numerical cols of interest
</span><span class="n">num_cols</span> <span class="o">=</span> <span class="p">[</span>
    <span class="c1">#'location-long', 
</span>    <span class="c1">#'location-lat',
</span>    <span class="s">'acceleration-raw-x'</span><span class="p">,</span> 
    <span class="s">'acceleration-raw-y'</span><span class="p">,</span>
    <span class="s">'acceleration-raw-z'</span><span class="p">,</span>
    <span class="s">'ground-speed'</span><span class="p">,</span>
    <span class="s">'external-temperature'</span><span class="p">,</span>
    <span class="s">'height-above-msl'</span><span class="p">,</span>
<span class="p">]</span>

<span class="n">df_num</span> <span class="o">=</span> <span class="n">df_ornitela</span><span class="p">[</span><span class="n">num_cols</span><span class="p">].</span><span class="n">sample</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df_ornitela</span><span class="p">)</span><span class="o">//</span><span class="mi">10</span><span class="p">)</span>
<span class="n">g</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">pairplot</span><span class="p">(</span><span class="n">df_num</span><span class="p">)</span>
<span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="n">g</span><span class="p">.</span><span class="n">axes</span><span class="p">.</span><span class="n">flatten</span><span class="p">():</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="n">ax</span><span class="p">.</span><span class="n">get_xlabel</span><span class="p">(),</span> <span class="n">rotation</span> <span class="o">=</span> <span class="mi">90</span><span class="p">)</span>                           <span class="c1"># rotate x axis labels
</span>    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="n">ax</span><span class="p">.</span><span class="n">get_ylabel</span><span class="p">(),</span> <span class="n">rotation</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>                            <span class="c1"># rotate y axis labels
</span>    <span class="n">ax</span><span class="p">.</span><span class="n">yaxis</span><span class="p">.</span><span class="n">get_label</span><span class="p">().</span><span class="n">set_horizontalalignment</span><span class="p">(</span><span class="s">'right'</span><span class="p">)</span>                   <span class="c1"># set y labels alignment
</span><span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="../../assets/img/nesher_bari/output_55_0.png?msec=1698559690105" alt="png" /></p>

<p>There are no obvious correlations at first glance. We can note however that the deviation of the scatter is quite great and that we see quite a lot of clustering between the attributes. In any case, we donâ€™t have to remove attributes due to correlations.</p>

<h2 id="conclusion">Conclusion</h2>

<p>In this post, we performed an Exploratory Data Analysis (EDA) on the Ornitela dataset, which enables with a better understanding on how the dataset is characterised. Moreover, it gave us an overview of what attributes of the dataset are most important for developing an ML algorithm that can predict a likelihood of high-risk of death based on the attributes (e.g., latitude, longitude, speed, etc).</p>

<p>From a causal inference perspective, I think the most important attributes for the first version of an ML algorithm are the following:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">event-id</code></li>
  <li><code class="language-plaintext highlighter-rouge">individual-local-identifier</code></li>
  <li><code class="language-plaintext highlighter-rouge">timestamp</code></li>
  <li><code class="language-plaintext highlighter-rouge">location-long</code></li>
  <li><code class="language-plaintext highlighter-rouge">location-lat</code></li>
  <li><code class="language-plaintext highlighter-rouge">height-above-msl</code></li>
  <li><code class="language-plaintext highlighter-rouge">ground-speed</code></li>
  <li><code class="language-plaintext highlighter-rouge">acceleration-raw-x</code></li>
  <li><code class="language-plaintext highlighter-rouge">acceleration-raw-y</code></li>
  <li><code class="language-plaintext highlighter-rouge">acceleration-raw-z</code></li>
  <li><code class="language-plaintext highlighter-rouge">external-temperature</code></li>
</ul>

<p>Once we have done a first feature selection, we can go ahead and prepare the dataset to be fed into an ML model. Stay tuned for more</p>
:ET